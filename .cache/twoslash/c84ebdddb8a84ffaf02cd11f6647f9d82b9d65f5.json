{"code":"import axios from 'axios'\nconst { get } = axios\n\nconst repo = ref<RepoData | null>(null)\n\nconst fetch = () => {\n  get(`https://api.github.com/repos/nickgraffis/petite-vin`).then((data: { data: RepoData }) => {\n    repo.value = data.data\n  })\n}\n\nfetch()","extension":"ts","highlights":[],"queries":[],"staticQuickInfos":[{"text":"(alias) const axios: AxiosStatic\nimport axios","docs":"","start":7,"length":5,"line":0,"character":7,"targetString":"axios"},{"text":"const get: <T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig | undefined) => Promise<R>","docs":"","start":34,"length":3,"line":1,"character":8,"targetString":"get"},{"text":"(alias) const axios: AxiosStatic\nimport axios","docs":"","start":42,"length":5,"line":1,"character":16,"targetString":"axios"},{"text":"const repo: Ref<{\n    description?: string | undefined;\n    stars?: number | undefined;\n    forks?: number | undefined;\n    created_at?: string | undefined;\n    updated_at?: string | undefined;\n    pushed_at?: string | undefined;\n    homepage?: string | undefined;\n    html_url?: string | undefined;\n    languages?: {\n        ...;\n    } | undefined;\n} | null>","docs":"","start":55,"length":4,"line":3,"character":6,"targetString":"repo"},{"text":"(alias) ref<RepoData | null>(value: RepoData | null): Ref<{\n    description?: string | undefined;\n    stars?: number | undefined;\n    forks?: number | undefined;\n    created_at?: string | undefined;\n    ... 4 more ...;\n    languages?: {\n        ...;\n    } | undefined;\n} | null> (+2 overloads)\nimport ref","docs":"","start":62,"length":3,"line":3,"character":13,"targetString":"ref"},{"text":"type RepoData = {\n    description?: string | undefined;\n    stars?: number | undefined;\n    forks?: number | undefined;\n    created_at?: string | undefined;\n    updated_at?: string | undefined;\n    pushed_at?: string | undefined;\n    homepage?: string | undefined;\n    html_url?: string | undefined;\n    languages?: {\n        ...;\n    } | undefined;\n}","docs":"","start":66,"length":8,"line":3,"character":17,"targetString":"RepoData"},{"text":"const fetch: () => void","docs":"","start":96,"length":5,"line":5,"character":6,"targetString":"fetch"},{"text":"const get: <any, AxiosResponse<any>>(url: string, config?: AxiosRequestConfig | undefined) => Promise<AxiosResponse<any>>","docs":"","start":114,"length":3,"line":6,"character":2,"targetString":"get"},{"text":"(method) Promise<AxiosResponse<any>>.then<void, never>(onfulfilled?: ((value: AxiosResponse<any>) => void | PromiseLike<void>) | null | undefined, onrejected?: ((reason: any) => PromiseLike<never>) | null | undefined): Promise<...>","docs":"Attaches callbacks for the resolution and/or rejection of the Promise.","start":173,"length":4,"line":6,"character":61,"targetString":"then"},{"text":"(parameter) data: {\n    data: RepoData;\n}","docs":"","start":179,"length":4,"line":6,"character":67,"targetString":"data"},{"text":"(property) data: RepoData","docs":"","start":187,"length":4,"line":6,"character":75,"targetString":"data"},{"text":"type RepoData = {\n    description?: string | undefined;\n    stars?: number | undefined;\n    forks?: number | undefined;\n    created_at?: string | undefined;\n    updated_at?: string | undefined;\n    pushed_at?: string | undefined;\n    homepage?: string | undefined;\n    html_url?: string | undefined;\n    languages?: {\n        ...;\n    } | undefined;\n}","docs":"","start":193,"length":8,"line":6,"character":81,"targetString":"RepoData"},{"text":"const repo: Ref<{\n    description?: string | undefined;\n    stars?: number | undefined;\n    forks?: number | undefined;\n    created_at?: string | undefined;\n    updated_at?: string | undefined;\n    pushed_at?: string | undefined;\n    homepage?: string | undefined;\n    html_url?: string | undefined;\n    languages?: {\n        ...;\n    } | undefined;\n} | null>","docs":"","start":214,"length":4,"line":7,"character":4,"targetString":"repo"},{"text":"(property) Ref<{ description?: string | undefined; stars?: number | undefined; forks?: number | undefined; created_at?: string | undefined; updated_at?: string | undefined; pushed_at?: string | undefined; homepage?: string | undefined; html_url?: string | undefined; languages?: { ...; } | undefined; } | null>.value: {\n    description?: string | undefined;\n    stars?: number | undefined;\n    forks?: number | undefined;\n    created_at?: string | undefined;\n    updated_at?: string | undefined;\n    pushed_at?: string | undefined;\n    homepage?: string | undefined;\n    html_url?: string | undefined;\n    languages?: {\n        ...;\n    } | undefined;\n} | null","docs":"","start":219,"length":5,"line":7,"character":9,"targetString":"value"},{"text":"(parameter) data: {\n    data: RepoData;\n}","docs":"","start":227,"length":4,"line":7,"character":17,"targetString":"data"},{"text":"(property) data: RepoData","docs":"","start":232,"length":4,"line":7,"character":22,"targetString":"data"},{"text":"const fetch: () => void","docs":"","start":245,"length":5,"line":11,"character":0,"targetString":"fetch"}],"errors":[],"playgroundURL":"https://www.typescriptlang.org/play/#code/C4TwDgpgBAShYHsAiBDYKoF4oG8BQUUAJhAM4DGATgJZjDUIB2A-AFxSnA2MDmBH6SqTZRGAVwC2AIwiV+AMwSUA1sPbjps-lQhoIRAPpoRnbn0JiwRPYePtT1XvzBjSAC31HgJro-NQ3BAl4FB4IHzN+N2AJABsDMUpYiL9+WJReMVCyERwoAG1lCBB7X14AXVKzKABfPDrqCURKYFwoSgh5Wqh5SiCoAHIANzEIAbwAegmoAFo58jFgOZm8RubWlAAPBlIevolBrZ3x8iZONrDWmqwoI4RSPDxTxnOOxBuO+QAeOERUdCgAB9RGJYrEAHwACnEYIAlI9nud5BBgOQ3DdIbCsODcPxLpCAAbRYBgUisKYoMDUAB0PGowDcYik1NOEgmb3uE0Y1HIyh4lBQ8nk1FIE0g9GAEBmQ0cBNh1IZEEYkMh1nQ7DyapQ7F+yDQGBqWMwOPwhEIHOpQxQsVGNy11K1-EN9UeyNRbkxQA","tags":[]}